//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HospitalManagement
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TestEntities : DbContext
    {
        public TestEntities()
            : base("name=TestEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Hospital> Hospitals { get; set; }
    
        public virtual int SP_Add_Hospital(string hospitalName, string hospitalSpeciality, string hospitalAddress, string hospialCity, string hospitalContactNumber)
        {
            var hospitalNameParameter = hospitalName != null ?
                new ObjectParameter("HospitalName", hospitalName) :
                new ObjectParameter("HospitalName", typeof(string));
    
            var hospitalSpecialityParameter = hospitalSpeciality != null ?
                new ObjectParameter("HospitalSpeciality", hospitalSpeciality) :
                new ObjectParameter("HospitalSpeciality", typeof(string));
    
            var hospitalAddressParameter = hospitalAddress != null ?
                new ObjectParameter("HospitalAddress", hospitalAddress) :
                new ObjectParameter("HospitalAddress", typeof(string));
    
            var hospialCityParameter = hospialCity != null ?
                new ObjectParameter("HospialCity", hospialCity) :
                new ObjectParameter("HospialCity", typeof(string));
    
            var hospitalContactNumberParameter = hospitalContactNumber != null ?
                new ObjectParameter("HospitalContactNumber", hospitalContactNumber) :
                new ObjectParameter("HospitalContactNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Add_Hospital", hospitalNameParameter, hospitalSpecialityParameter, hospitalAddressParameter, hospialCityParameter, hospitalContactNumberParameter);
        }
    
        public virtual int SP_Delete_Hospital(Nullable<int> hospitalId)
        {
            var hospitalIdParameter = hospitalId.HasValue ?
                new ObjectParameter("HospitalId", hospitalId) :
                new ObjectParameter("HospitalId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Delete_Hospital", hospitalIdParameter);
        }
    
        public virtual ObjectResult<SP_Get_All_Hospital_Result> SP_Get_All_Hospital()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_All_Hospital_Result>("SP_Get_All_Hospital");
        }
    
        public virtual ObjectResult<SP_Get_Hospital_By_Id_Result> SP_Get_Hospital_By_Id(Nullable<int> hospitalId)
        {
            var hospitalIdParameter = hospitalId.HasValue ?
                new ObjectParameter("HospitalId", hospitalId) :
                new ObjectParameter("HospitalId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_Hospital_By_Id_Result>("SP_Get_Hospital_By_Id", hospitalIdParameter);
        }
    
        public virtual int SP_Update_Hospital(Nullable<int> hospitalId, string hospitalName, string hospitalSpeciality, string hospitalAddress, string hospialCity, string hospitalContactNumber)
        {
            var hospitalIdParameter = hospitalId.HasValue ?
                new ObjectParameter("HospitalId", hospitalId) :
                new ObjectParameter("HospitalId", typeof(int));
    
            var hospitalNameParameter = hospitalName != null ?
                new ObjectParameter("HospitalName", hospitalName) :
                new ObjectParameter("HospitalName", typeof(string));
    
            var hospitalSpecialityParameter = hospitalSpeciality != null ?
                new ObjectParameter("HospitalSpeciality", hospitalSpeciality) :
                new ObjectParameter("HospitalSpeciality", typeof(string));
    
            var hospitalAddressParameter = hospitalAddress != null ?
                new ObjectParameter("HospitalAddress", hospitalAddress) :
                new ObjectParameter("HospitalAddress", typeof(string));
    
            var hospialCityParameter = hospialCity != null ?
                new ObjectParameter("HospialCity", hospialCity) :
                new ObjectParameter("HospialCity", typeof(string));
    
            var hospitalContactNumberParameter = hospitalContactNumber != null ?
                new ObjectParameter("HospitalContactNumber", hospitalContactNumber) :
                new ObjectParameter("HospitalContactNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_Hospital", hospitalIdParameter, hospitalNameParameter, hospitalSpecialityParameter, hospitalAddressParameter, hospialCityParameter, hospitalContactNumberParameter);
        }
    }
}
