@model HospitalManagement.Hospital

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <script src="~/Scripts/knockout-3.5.1.js"></script>
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <title>Edit</title>
</head>
<style>
    * {
        margin: 0 0 0;
    }

    .header {
        width: 100vw;
        height: 10vh;
        /*border: solid red;*/
        display: flex;
        flex-direction: row;
        background-color: lightblue;
    }

    .logo {
        width: 10vw;
        /*border: solid red;*/
    }

    .heading {
        width: 85vw;
        /*border: solid blue;*/
        display: flex;
        flex-direction: row;
        justify-content: center;
        font-size: 40px;
    }
</style>
<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="header">
            <div class="logo">
                <img style="width:100%; height:100%" src="https://t3.ftcdn.net/jpg/05/14/36/48/360_F_514364850_xLOQX6SOY2qcjAIcTowsi3xYvHmhmvs0.jpg" />
            </div>
            <div class="heading">
                Hospital Management
            </div>
        </div>
        <hr />
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.HospitalId)

            <div class="form-group">
                @Html.LabelFor(model => model.HospitalName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.HospitalName, new { htmlAttributes = new { @class = "form-control", data_bind = "value: HospitalName" } })
                    @Html.ValidationMessageFor(model => model.HospitalName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HospitalSpeciality, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.HospitalSpeciality, new { @class = "form-control", data_bind = "value: HospitalSpeciality" })
                    @Html.ValidationMessageFor(model => model.HospitalSpeciality, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HospitalAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.HospitalAddress, new { htmlAttributes = new { @class = "form-control", data_bind = "value: HospitalAddress" } })
                    @Html.ValidationMessageFor(model => model.HospitalAddress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HospialCity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.HospialCity, new { htmlAttributes = new { @class = "form-control", data_bind = "value: HospialCity" } })
                    @Html.ValidationMessageFor(model => model.HospialCity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HospitalContactNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.HospitalContactNumber, new { htmlAttributes = new { @class = "form-control", data_bind = "value: HospitalContactNumber" } })
                    @Html.ValidationMessageFor(model => model.HospitalContactNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HospitalArea, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.HospitalArea, new { htmlAttributes = new { @class = "form-control", data_bind = "value: HospitalArea" } })
                    @Html.ValidationMessageFor(model => model.HospitalArea, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit" value="Save" class="btn btn-default">Save</button>
                    <button>@Html.ActionLink("Back to List", "Index")</button>
                </div>
            </div>
        </div>
    }

    @{
        var listData = ViewData["ListValue"] as List<HospitalManagement.Hospital>;
    }

    @if (listData.Count > 0)
    {
        <div class="row col-md-12">
            <table class="table table-bordered">
                <tbody>

                    <tr>
                        <th> HospitalId </th>
                        <th> HospitalName </th>
                        <th> HospitalSpeciality</th>
                        <th> HospitalAddress</th>
                        <th> HospialCity</th>
                        <th> HospitalContactNumber</th>
                        <th> HospitalArea</th>
                        <th> Actions</th>
                    </tr>
                    @foreach (var item in ViewData["ListValue"] as List<HospitalManagement.Hospital>)
                    {
                        <tr>
                            <td> @item.HospitalId</td>
                            <td> @item.HospitalName</td>
                            <td> @item.HospitalSpeciality</td>
                            <td> @item.HospitalAddress</td>
                            <td> @item.HospialCity</td>
                            <td> @item.HospitalContactNumber</td>
                            <td> @item.HospitalArea</td>
                            <td>
                                @Html.ActionLink("Edit", "Edit", new { id = item.HospitalId }) |
                                @Html.ActionLink("Details", "Details", new { id = item.HospitalId }) |
                                @Html.ActionLink("Delete", "Delete", new { id = item.HospitalId })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    <script>
        function HospitalViewModel() {
            var self = this;

            self.HospitalId = ko.observable("@Model.HospitalId"); // Assign the initial value from the server-side model
            self.HospitalName = ko.observable("@Model.HospitalName"); // Assign the initial value from the server-side model
            self.HospitalSpeciality = ko.observable("@Model.HospitalSpeciality");
            self.HospitalAddress = ko.observable("@Model.HospitalAddress");
            self.HospialCity = ko.observable("@Model.HospialCity");
            self.HospitalContactNumber = ko.observable("@Model.HospitalContactNumber");
            self.HospitalArea = ko.observable("@Model.HospitalArea");

            // Apply bindings
            ko.applyBindings(self);
        }

        // Create view model instance
        var viewModel = new HospitalViewModel();
    </script>
</body>
</html>
