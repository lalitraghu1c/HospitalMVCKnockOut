@model HospitalManagement.Hospital

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/knockout/3.5.1/knockout-min.js"></script>
    <script src="~/Scripts/knockout-3.5.1.js"></script>
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="~/Scripts/jquery-3.7.0.js"></script>


    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.15.1/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.7.14/js/bootstrap-datetimepicker.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.7.14/css/bootstrap-datetimepicker.min.css">

</head>
<style>
    * {
        margin: 0 0 0;
    }

    .header {
        width: 100vw;
        height: 10vh;
        /*border: solid red;*/
        display: flex;
        flex-direction: row;
        background-color: lightblue;
    }

    .logo {
        width: 10vw;
        /*border: solid red;*/
    }

    .heading {
        width: 85vw;
        /*border: solid blue;*/
        display: flex;
        flex-direction: row;
        justify-content: center;
        font-size: 40px;
    }
</style>
<body>
    @using (Html.BeginForm("Create", "Hospitals", FormMethod.Post, new { @id = "HospitalForm", @name = "HospitalForm" }))
    {
        @Html.AntiForgeryToken()
        <div class="header">
            <div class="logo">
                <img style="width:100%; height:100%" src="https://t3.ftcdn.net/jpg/05/14/36/48/360_F_514364850_xLOQX6SOY2qcjAIcTowsi3xYvHmhmvs0.jpg" />
            </div>
            <div class="heading">
                Hospital Management
            </div>
        </div>
        <hr />
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.HospitalName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.HospitalName, new { @class = "form-control", data_bind = "value: HospitalName" })
                    @Html.ValidationMessageFor(model => model.HospitalName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HospitalSpeciality, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.HospitalSpeciality, new { @class = "form-control", data_bind = "value: HospitalSpeciality" })
                    @Html.ValidationMessageFor(model => model.HospitalSpeciality, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HospitalAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.HospitalAddress, new { @class = "form-control", data_bind = "value: HospitalAddress" })
                    @Html.ValidationMessageFor(model => model.HospitalAddress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HospialCity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.HospialCity, new SelectList(new[] { "", "Hyderabad", "Delhi", "Bhopal", "Indore", "Noida", "Bangalore" }), new { @class = "form-control", data_bind = "value: HospialCity" })
                    @Html.ValidationMessageFor(model => model.HospialCity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HospitalContactNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.HospitalContactNumber, new { @class = "form-control", data_bind = "value: HospitalContactNumber" })
                    @Html.ValidationMessageFor(model => model.HospitalContactNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HospitalArea, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    <label class="checkbox-inline">
                        @Html.RadioButtonFor(model => model.HospitalArea, "Urban", new { @checked = "checked", data_bind = "checked: HospitalArea" }) Urban
                    </label>
                    <label class="checkbox-inline">
                        @Html.RadioButtonFor(model => model.HospitalArea, "Rural", new { data_bind = "checked: HospitalArea" }) Rural
                    </label>
                    @Html.ValidationMessageFor(model => model.HospitalArea, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.HospitalArea, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.HospitalArea, new SelectList(new[] { "", "Urban", "Rural" }), new { @class = "form-control", data_bind = "value: HospitalArea" })
                    @Html.ValidationMessageFor(model => model.HospitalArea, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-3">
                    <label class="label-control" >Date Of Joining</label>
                    <div class='input-group date' id='picker'>
                        <input type='text' class="form-control" id="DateOfJoinin" name="DateOfJoinin" data-bind="value: DateOfJoinin" />
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(model => model.DateOfJoinin, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" onclick="return validateForm(this);" class="btn btn-dark" id="createButton" />
                </div>
            </div>
        </div>
    }
    <button>@Html.ActionLink("Back to List", "Index")</button><br />


    @{
        var listData = ViewData["ListValue"] as List<HospitalManagement.Hospital>;
    }

    @if (listData.Count > 0)
    {
        <div class="row col-md-12">
            <table class="table table-bordered table-hover">
                <tbody>
                    <tr style="background-color:lightpink">
                        <th> HospitalName </th>
                        <th> HospitalSpeciality</th>
                        <th> HospitalAddress</th>
                        <th> HospialCity</th>
                        <th> HospitalContactNumber</th>
                        <th> HospitalArea</th>
                        <th> DateOfJoining</th>
                        <th> Actions</th>
                    </tr>
                    @foreach (var item in ViewData["ListValue"] as List<HospitalManagement.Hospital>)
                    {
                        <tr style="background-color:lightcyan">
                            <td> @item.HospitalName</td>
                            <td> @item.HospitalSpeciality</td>
                            <td> @item.HospitalAddress</td>
                            <td> @item.HospialCity</td>
                            <td> @item.HospitalContactNumber</td>
                            <td> @item.HospitalArea</td>
                            <td> @item.DateOfJoinin</td>
                            <td>
                                @Html.ActionLink("Edit", "Edit", new { id = item.HospitalId }) |
                                @Html.ActionLink("Details", "Details", new { id = item.HospitalId }) |
                                @Html.ActionLink("Delete", "Delete", new { id = item.HospitalId })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }

    <script type="text/javascript">
       
        function HospitalViewModel() {
            var self = this;

            // Observable properties
            self.HospitalName = ko.observable();
            self.HospitalSpeciality = ko.observable();
            self.HospitalAddress = ko.observable();
            self.HospialCity = ko.observable();
            self.HospitalContactNumber = ko.observable();
            self.HospitalArea = ko.observable();
            self.DateOfJoinin = ko.observable();
      
            // Apply bindings
            ko.applyBindings(self);
        }

        // Create view model instance
        var viewModel = new HospitalViewModel();

        var validateForm = function () {
            console.log($("#HospitalForm").serialize());
            alert(viewModel.DateOfJoinin())
            return true;
        }

        $(function () {
            $('#picker').datetimepicker({
                format: 'YYYY/MM/DD HH:mm:ss',
                showClear: true,
                useCurrent: false   
            });

            $('#picker').on('dp.change', function (e) {
                viewModel.DateOfJoinin(e.date.format('YYYY/MM/DD HH:mm:ss'));
            });
        });
        
    </script>

</body>
</html>
